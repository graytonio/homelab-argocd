radarr:
  podSecurityContext:
    fsGroup: 568
  env:
    PUID: 1001
    PGID: 568
  persistence:
    media:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/Movies
    downloads:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/downloads
  ingress:
    main:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "{% if traefik_ssl_enabled %}websecure{% else %}web{% endif %}"
      hosts:
        - host: radarr.{{ env_base_domain }}
          paths:
            - path: /
              pathType: ImplementationSpecific

sonarr:
  podSecurityContext:
    fsGroup: 568
  env:
    PUID: 1001
    PGID: 568
  persistence:
    media:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/TV
    downloads:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/downloads
  ingress:
    main:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "{% if traefik_ssl_enabled %}websecure{% else %}web{% endif %}"
      hosts:
        - host: sonarr.{{ env_base_domain }}
          paths:
            - path: /
              pathType: ImplementationSpecific

prowlarr:
  ingress:
    main:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "{% if traefik_ssl_enabled %}websecure{% else %}web{% endif %}"
      hosts:
        - host: prowlarr.{{ env_base_domain }}
          paths:
            - path: /
              pathType: ImplementationSpecific
  addons:
    vpn:
      env:
        - name: VPN_SERVICE_PROVIDER
          value: private internet access
        - name: OPENVPN_USER
          valueFrom:
            secretKeyRef:
              name: openvpn-credentials
              key: openvpn-user
        - name: OPENVPN_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: openvpn-credentials
              key: openvpn-password
        - name: VPN_INTERFACE
          value: tun0
        - name: DNS_KEEP_NAMESERVER
          value: "on"
        - name: DOT
          value: "off"
        - name: FIREWALL_OUTBOUND_SUBNETS
          value: "10.0.0.0/8"
        - name: SERVER_REGIONS
          value: {{ pirate_ship_vpn.region }}

transmission:
  enabled: false
  env:
    PUID: 1001
    PGID: 568
  podSecurityContext:
    fsGroup: 568
  persistence:
    media:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/Movies
    downloads:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/downloads
  ingress:
    main:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "{% if traefik_ssl_enabled %}websecure{% else %}web{% endif %}"
      hosts:
        - host: transmission.{{ env_base_domain }}
          paths:
            - path: /
              pathType: ImplementationSpecific
  addons:
    vpn:
      env:
        - name: VPN_SERVICE_PROVIDER
          value: private internet access
        - name: OPENVPN_USER
          valueFrom:
            secretKeyRef:
              name: openvpn-credentials
              key: openvpn-user
        - name: OPENVPN_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: openvpn-credentials
              key: openvpn-password
        - name: VPN_INTERFACE
          value: tun0
        - name: DNS_KEEP_NAMESERVER
          value: "on"
        - name: DOT
          value: "off"
        - name: FIREWALL_OUTBOUND_SUBNETS
          value: "10.0.0.0/8"
        - name: VPN_PORT_FORWARDING
          value: "on"
        - name: SERVER_REGIONS
          value: CA Ontario

nzbget:
  env:
    PUID: 1001
    PGID: 568
  podSecurityContext:
    fsGroup: 568
  persistence:
    media:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/Movies
    downloads:
      enabled: true
      type: nfs
      server: 10.0.0.50
      path: /mnt/Vault/Media/downloads
  ingress:
    main:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "{% if traefik_ssl_enabled %}websecure{% else %}web{% endif %}"
      hosts:
        - host: nzbget.{{ env_base_domain }}
          paths:
            - path: /
              pathType: ImplementationSpecific
  addons:
    vpn:
      enabled: false
      env:
        - name: VPN_SERVICE_PROVIDER
          value: private internet access
        - name: OPENVPN_USER
          valueFrom:
            secretKeyRef:
              name: openvpn-credentials
              key: openvpn-user
        - name: OPENVPN_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: openvpn-credentials
              key: openvpn-password
        - name: VPN_INTERFACE
          value: tun0
        - name: DNS_KEEP_NAMESERVER
          value: "on"
        - name: DOT
          value: "off"
        - name: FIREWALL_OUTBOUND_SUBNETS
          value: "10.0.0.0/8"
        - name: OPENVPN_CIPHERS
          value: "aes-128-cbc"
        - name: SERVER_REGIONS
          value: {{ pirate_ship_vpn.region }}

overseerr:
  ingress:
    main:
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: "{% if traefik_ssl_enabled %}websecure{% else %}web{% endif %}"
      hosts:
        - host: netflix.{{ env_base_domain }}
          paths:
            - path: /
              pathType: ImplementationSpecific